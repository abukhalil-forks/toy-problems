/*
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?

 */

var highlyDivisible = (numberOfDivisors) => {
  // find the prime numbers less than a number
  // check which prime numbers are a divisor
  // find the powers of those divisors
  // calculate the total number of divisors
  // check that this if this is larger than
  // number of divisors
  return 0;
}

var findPrimeNumbersLessThan = (number) => {
  var primeNumbers = [];
  for(var i = 2; i < number; i++){
    primeNumbers.push(i);
  }
  
  for(var i = 0; i < primeNumbers.length; i++){
    for(var j = i + 1; j < primeNumbers.length; j++){
      if(primeNumbers[j] % primeNumbers[i] === 0){
        primeNumbers.splice(j, 1);
      }
    }
  }
  return primeNumbers;
}

var getDivisors = (number, maybeDivisor) =>{
  var divisors = [];
  for(var i = 0; i < maybeDivisor.length; i++){
    if(number % maybeDivisor[i] === 0){
      divisors.push(maybeDivisor[i]);
    }
  } 
  return divisors;
}

module.exports = {highlyDivisible, 
                  findPrimeNumbersLessThan,
                  getDivisors};
